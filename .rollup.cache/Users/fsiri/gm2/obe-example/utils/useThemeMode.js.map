{"version":3,"file":"useThemeMode.js","sourceRoot":"","sources":["useThemeMode.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAClC,OAAO,EAAE,iBAAiB,EAAE,MAAM,0BAA0B,CAAC;AAE7D,IAAM,YAAY,GAAG,EAAE,UAAU,EAAE,KAAK,EAAE,CAAC;AACnC,IAAA,cAAc,GAAK,iBAAiB,CAAC,YAAY,CAAC,eAApC,CAAqC;AAE3D,MAAM,CAAC,IAAM,YAAY,GAAG;IACpB,IAAA,KAA8B,cAAc,CAAC,YAAY,CAAC,EAAzD,UAAU,QAAA,EAAE,aAAa,QAAgC,CAAC;IAEjE,SAAS,CAAC;QACR,8DAA8D;QAC9D,6BAA6B;QAC7B,iCAAiC;QACjC,IAAI;QACJ,EAAE;QACF,IAAI,YAAY,CAAC,KAAK,KAAK,MAAM,EAAE,CAAC;YAClC,MAAM,EAAE,CAAC;QACX,CAAC;aAAM,CAAC;YACN,OAAO,EAAE,CAAC;QACZ,CAAC;QACD,uDAAuD;IACzD,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,IAAM,MAAM,GAAG;QACb,aAAa,CAAC,IAAI,CAAC,CAAC;QACpB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI;YAAE,OAAO;QAClB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAC/D,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC;IAC9B,CAAC,CAAC;IAEF,IAAM,OAAO,GAAG;QACd,aAAa,CAAC,KAAK,CAAC,CAAC;QACrB,IAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC5C,IAAI,CAAC,IAAI;YAAE,OAAO;QAClB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC9B,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;IAC/B,CAAC,CAAC;IAEF,SAAS,eAAe;QACtB,IAAI,YAAY,CAAC,KAAK,KAAK,OAAO,EAAE,CAAC;YACnC,MAAM,EAAE,CAAC;QACX,CAAC;aAAM,CAAC;YACN,OAAO,EAAE,CAAC;QACZ,CAAC;IACH,CAAC;IAED,OAAO;QACL,UAAU,YAAA;QACV,MAAM,QAAA;QACN,OAAO,SAAA;QACP,eAAe,iBAAA;KAChB,CAAC;AACJ,CAAC,CAAC","sourcesContent":["import { useEffect } from \"react\";\nimport { createGlobalState } from \"react-hooks-global-state\";\n\nconst initialState = { isDarkmode: false };\nconst { useGlobalState } = createGlobalState(initialState);\n\nexport const useThemeMode = () => {\n  const [isDarkMode, setIsDarkMode] = useGlobalState(\"isDarkmode\");\n\n  useEffect(() => {\n    // Enbale this if you want use the dark-mode for default mode.\n    // if (!localStorage.theme) {\n    //   localStorage.theme = \"dark\";\n    // }\n    //\n    if (localStorage.theme === \"dark\") {\n      toDark();\n    } else {\n      toLight();\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const toDark = () => {\n    setIsDarkMode(true);\n    const root = document.querySelector(\"html\");\n    if (!root) return;\n    !root.classList.contains(\"dark\") && root.classList.add(\"dark\");\n    localStorage.theme = \"dark\";\n  };\n\n  const toLight = () => {\n    setIsDarkMode(false);\n    const root = document.querySelector(\"html\");\n    if (!root) return;\n    root.classList.remove(\"dark\");\n    localStorage.theme = \"light\";\n  };\n\n  function _toogleDarkMode() {\n    if (localStorage.theme === \"light\") {\n      toDark();\n    } else {\n      toLight();\n    }\n  }\n\n  return {\n    isDarkMode,\n    toDark,\n    toLight,\n    _toogleDarkMode,\n  };\n};\n"]}